services:
  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  
  redis:
    image: redis:6.2
    container_name: redis
    restart: always
    ports:
      - 6379:6379

  redpanda:
    image: redpandadata/redpanda:latest
    container_name: redpanda
    ports:
      - 9092:9092
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp=1
      - --memory=512M
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092

  player:
    build:
      context: ../
      dockerfile: docker/player/Dockerfile.local
    container_name: player
    working_dir: /app
    command: >
      sh -c "yarn prisma generate --schema=services/player/prisma/schema.prisma &&
      
             yarn start:player:dev"
    env_file:
      - ../services/player/.env
    ports:
      - 3001:3001

  race:
    build:
      context: ../
      dockerfile: docker/race/Dockerfile.local
    container_name: race
    working_dir: /app
    command: >
      sh -c "yarn prisma generate --schema=services/race/prisma/schema.prisma &&
      yarn prisma migrate deploy --schema=services/race/prisma/schema.prisma &&
             yarn start:race:dev"
    env_file:
      - ../services/race/.env
    ports:
      - 3003:3003

  vote:
    build:
      context: ../
      dockerfile: docker/vote/Dockerfile.local
    container_name: vote
    working_dir: /app
    command: >
     sh -c "yarn prisma generate --schema=services/vote/prisma/schema.prisma &&
             yarn prisma migrate reset --force --schema=services/vote/prisma/schema.prisma &&
             yarn prisma migrate dev --name init --schema=services/vote/prisma/schema.prisma &&
             yarn start:vote:dev"
    env_file:
      - ../services/vote/.env
    ports:
      - 3008:3008

  combat:
    build:
      context: ../
      dockerfile: docker/combat/Dockerfile.local
    container_name: combat
    working_dir: /app
    command: >
     sh -c "yarn prisma generate --schema=services/combat/prisma/schema.prisma &&
             yarn prisma migrate dev --name init --schema=services/combat/prisma/schema.prisma &&
             yarn start:combat:dev"
    env_file:
      - ../services/combat/.env
    ports:
      - 3007:3007

  world:
    build:
      context: ../
      dockerfile: docker/world/Dockerfile.local
    container_name: world
    working_dir: /app
    command: >
     sh -c "yarn prisma generate --schema=services/world/prisma/schema.prisma &&
             yarn prisma migrate dev --name init --schema=services/world/prisma/schema.prisma &&
             yarn start:world:dev"
    env_file:
      - ../services/world/.env
    ports:
      - 3005:3005

  village:
    build:
      context: ../
      dockerfile: docker/village/Dockerfile.local
    container_name: village
    depends_on:
      - db
      - redpanda
      - redis
    env_file:
      - ../services/village/.env
    ports:
      - 3002:3002
    working_dir: /app
    command: >
      sh -c
      "yarn prisma generate --schema=services/village/prisma/schema.prisma &&
      yarn prisma migrate deploy --schema=services/village/prisma/schema.prisma &&
       yarn start:village:dev"

  chat:
    build:
      context: ../
      dockerfile: docker/chat/Dockerfile.local
    container_name: chat
    depends_on:
      - db
      - redpanda
      - redis
    env_file:
      - ../services/chat/.env
    ports:
      - 3004:3004
    working_dir: /app
    command: >
      sh -c
      "yarn prisma generate --schema=services/chat/prisma/schema.prisma &&
      yarn prisma migrate deploy --schema=services/chat/prisma/schema.prisma &&
       yarn start:chat:dev"

volumes:
  pgdata: